{
  //"coc.preferences.formatOnType": true,
  //"diagnostic.errorSign": "✗",
  //"diagnostic.warningSign": "⚡",
  "npm.binPath": "pnpm",

  "diagnostic.refreshOnInsertMode": true,

  // Rust
  "rust-client.updateOnStartup": true,
  "rust-client.channel": "nightly",
  "rust.unstable_features": true,
  "rust.all_features": true,

  "eslint.autoFixOnSave": true,

  // TSLint
  "prettier.eslintIntegration": true,
  "prettier.tslintIntegration": true,
  "prettier.stylelintIntegration": true,

  //"coc.preferences.diagnostic.errorSign": "✗",
  //"coc.preferences.diagnostic.warningSign": "⚡",

  "suggest.noselect": false,
  "suggest.preferCompleteThanJumpPlaceholder": true,

  "tsserver.enable": true,
  //"tsserver.orgnizeImportOnSave": false,
  "tsserver.implicitProjectConfig.experimentalDecorators": true,
  "tsserver.enableJavascript": false,
  "typescript.updateImportsOnFileMove.enable": false,
  "typescript.preferences.quoteStyle": "single",
  "javascript.preferences.quoteStyle": "single",

  "dart.analysisExcludedFolders": ["vendor"],

  "emmet.includeLanguages": { "javascript": "javascriptreact" },

  "languageserver": {
    //"dart": {
    //  "command": "dart",
    //  "args": [
    //    // " change this to the path of analysis_server
    //    //"/usr/local/opt/dart/libexec/bin/snapshots/analysis_server.dart.snapshot",
    //    "--lsp",
    //    "--client-id",
    //    "vim",
    //    "--client-version",
    //    "coc.nvim"
    //  ],
    //  "filetypes": ["dart"],
    //  "trace.server": "verbose"
    //},
    //"rust": {
    //  "command": "ra_lsp_server",
    //  "filetypes": ["rust"],
    //  "rootPatterns": ["Cargo.toml"]
    //},
    "golang": {
      "command": "gopls",
      "args": [],
      "rootPatterns": ["go.mod", ".vim/", ".git/", ".hg/"],
      "filetypes": ["go"]
    }
  },

  "coc.preferences.formatOnSaveFiletypes": [
    "css",
    "Markdown",
    "javascriptreact",
    "typescript",
    "typescriptreact",
    "json",
    "graphql",
    "javascript",
    "rust",
    "dart"
  ],

  "flutter.provider.hot-reload": true,
  "flutter.lsp.initialization.onlyAnalyzeProjectsWithOpenFiles": false,

  "explorer.position": "right"

  //"go.alternateTools": {
  //  "go-langserver": "gopls", // or bingo
  //},
  //"go.languageServerExperimentalFeatures": {
  //  "format": true,
  //  "autoComplete": true
  //},
  //"go.useLanguageServer": true
}
